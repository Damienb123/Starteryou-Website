name: Deploy to AWS EC2

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials for Dev Server
      - name: Configure AWS credentials for Dev Server
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Debug AWS Credentials on Dev Server
      - name: Debug AWS credentials
        run: |
          echo "Testing AWS credentials on dev server..."
          aws sts get-caller-identity --region $${{ secrets.AWS_REGION }}

      # Step 4: Verify SSH Tunnel to DB Server
      - name: Verify SSH Tunnel to DB Server
        run: |
          echo "Setting up SSH tunnel to DB server..."
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H "$${{ secrets.DB_EC2_HOST }}" >> ~/.ssh/known_hosts
          echo "$${{ secrets.DB_EC2_SSH_KEY }}" > ~/.ssh/db_key.pem
          chmod 600 ~/.ssh/db_key.pem
          ssh -i ~/.ssh/db_key.pem $${{ secrets.DB_EC2_USER }}@$${{ secrets.DB_EC2_HOST }} "echo 'DB Server SSH Verified!'"

      # Step 5: Deploy Application to Dev Server
      - name: Deploy Application to Dev Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            #!/bin/bash
            set -e
            echo "Starting deployment on dev server..."

            # Ensure Git is installed
            if ! command -v git &> /dev/null; then
              sudo yum update -y || sudo apt-get update -y
              sudo yum install -y git || sudo apt-get install -y git
            fi

            # Clone or update repository
            PROJECT_ROOT="/home/ec2-user/Starteryou-Website"
            REPO_DIR="${PROJECT_ROOT}/Starteryou"
            if [ ! -d "$REPO_DIR" ]; then
              mkdir -p "$PROJECT_ROOT"
              cd "$PROJECT_ROOT"
              git clone https://github.com/***Inc/Starteryou-Website.git -b develop Starteryou
            else
              cd "$REPO_DIR"
              git fetch origin develop
              git reset --hard origin/develop
            fi

            # Restart Docker and deploy containers
            sudo systemctl start docker || sudo systemctl restart docker
            docker-compose down --volumes --remove-orphans
            docker-compose up -d --build

            echo "Deployment on dev server completed successfully!"
