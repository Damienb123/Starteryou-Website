name: Deploy to AWS EC2
on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

            # Step 6: Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.DB_EC2_SSH_KEY }}
          script: |
            #!/bin/bash
            set -e
            set -o pipefail

            log() { echo "[$(date +'%Y-%m-%d %H:%M:%S')] $*"; }
            handle_error() { log "Error occurred on line $1"; exit 1; }
            trap 'handle_error $LINENO' ERR

            PROJECT_ROOT="/home/ec2-user/Starteryou-Website"
            REPO_DIR="${PROJECT_ROOT}/Starteryou"
            ENV_FILE="${REPO_DIR}/.env"

            log "Ensuring project root exists..."
            mkdir -p "$PROJECT_ROOT"
            cd "$PROJECT_ROOT"

            log "Managing repository..."
            if [ ! -d "$REPO_DIR" ]; then
              log "Cloning repository..."
              git clone https://github.com/starteryouInc/Starteryou-Website.git -b develop Starteryou
            else
              log "Pulling latest changes..."
              cd "$REPO_DIR"
              git fetch origin develop
              git reset --hard origin/develop
            fi

            log "Creating .env file..."
            rm -f "$ENV_FILE"
            touch "$ENV_FILE"
            chmod 600 "$ENV_FILE"

            cat > "$ENV_FILE" << EOF
# Application Environment
NODE_ENV=production

# MongoDB Configuration
MONGO_USER=${MONGO_USER}
MONGO_PASSWORD=${MONGO_PASSWORD}
MONGO_HOST=localhost
MONGO_PORT=27017
MONGO_DB=${MONGO_DB}
MONGO_AUTH_SOURCE=${MONGO_AUTH_SOURCE}
MONGO_APP_NAME=${MONGO_APP_NAME}

# Additional Environment Variables can be added here
# EXAMPLE_VAR=example_value
EOF

            log "Ensuring Docker is running..."
            sudo systemctl start docker || sudo systemctl restart docker

            log "Cleaning up old Docker resources..."
            docker-compose down --volumes --remove-orphans
            docker system prune -af --volumes

            log "Building and starting Docker containers..."
            docker-compose up -d --build

            log "Verifying containers..."
            docker ps

            log "Deployment completed successfully!"
        env:
          MONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_DB: ${{ secrets.MONGO_DB }}
          MONGO_AUTH_SOURCE: ${{ secrets.MONGO_AUTH_SOURCE }}
          MONGO_APP_NAME: ${{ secrets.MONGO_APP_NAME }}
