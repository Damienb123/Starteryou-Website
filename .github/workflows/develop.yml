name: Deploy to AWS EC2

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 1: Fetch SSL certificates from the DB server
      - name: Fetch SSL certificates from DB server
        env:
          DB_SSH_KEY: ${{ secrets.DB_EC2_SSH_KEY }}    # Private key for DB server
          DB_EC2_USER: ${{ secrets.DB_EC2_USER }}      # User for DB server
          DB_EC2_HOST: ${{ secrets.DB_EC2_HOST }}      # IP/Hostname for DB server
        run: |
          mkdir -p ./mongodb-certs
          scp -i "$DB_SSH_KEY" $DB_EC2_USER@$DB_EC2_HOST:/etc/ssl/mongodb/ca.crt ./mongodb-certs/
          scp -i "$DB_SSH_KEY" $DB_EC2_USER@$DB_EC2_HOST:/etc/ssl/mongodb/server.pem ./mongodb-certs/

      # Step 2: Deploy to the application server
      - name: Deploy to EC2
        env:
          DEPLOY_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # Private key for deployment server
          EC2_USER: ${{ secrets.EC2_USER }}          # User for deployment server
          EC2_HOST: ${{ secrets.EC2_HOST }}          # IP/Hostname for deployment server
        run: |
          ssh -i "$DEPLOY_SSH_KEY" $EC2_USER@$EC2_HOST "
            set -e
            if [ ! -d /home/ec2-user/Starteryou-Website/Starteryou ]; then
              mkdir -p /home/ec2-user/Starteryou-Website
              cd /home/ec2-user/Starteryou-Website
              git clone https://github.com/starteryouInc/Starteryou-Website.git -b develop Starteryou
            else
              cd /home/ec2-user/Starteryou-Website/Starteryou
              git pull origin develop --ff-only || git pull origin develop --rebase
            fi
            sudo systemctl start docker || sudo systemctl restart docker
            docker-compose down --volumes --remove-orphans
            docker system prune -af --volumes
            docker-compose up -d --build
          "

      # Step 3: Verify deployment logs
      - name: Verify Docker logs
        env:
          DEPLOY_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -i "$DEPLOY_SSH_KEY" $EC2_USER@$EC2_HOST "
            docker ps
            docker logs starteryou-backend
            docker logs starteryou-frontend
          "
