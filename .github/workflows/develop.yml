name: Deploy to AWS EC2

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up environment variables
        run: |
          echo "MONGO_USER=${{ secrets.MONGO_USER }}" >> $GITHUB_ENV
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> $GITHUB_ENV
          echo "MONGO_HOST=${{ secrets.MONGO_HOST }}" >> $GITHUB_ENV
          echo "MONGO_PORT=${{ secrets.MONGO_PORT }}" >> $GITHUB_ENV
          echo "MONGO_DB=${{ secrets.MONGO_DB }}" >> $GITHUB_ENV

      - name: Add SSL Certificates via Secrets
        run: |
          mkdir -p ./mongodb-certs
          echo "${{ secrets.MONGO_TLS_CA }}" > ./mongodb-certs/ca.crt
          echo "${{ secrets.MONGO_TLS_CERT }}" > ./mongodb-certs/server.pem
        shell: bash

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            if [ ! -d "/home/ec2-user/Starteryou-Website/Starteryou" ]; then
              mkdir -p /home/ec2-user/Starteryou-Website
              cd /home/ec2-user/Starteryou-Website
              git clone https://github.com/starteryouInc/Starteryou-Website.git -b develop Starteryou
            else
              cd /home/ec2-user/Starteryou-Website/Starteryou
              git pull origin develop --ff-only || git pull origin develop --rebase
            fi
            sudo systemctl start docker || sudo systemctl restart docker
            docker-compose down --volumes --remove-orphans
            docker system prune -af --volumes
            docker-compose up -d --build
            docker ps
            docker logs starteryou-backend
            docker logs starteryou-frontend
