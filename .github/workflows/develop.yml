- name: Deploy to EC2
  uses: appleboy/ssh-action@v0.1.7
  with:
    host: ${{ secrets.EC2_HOST }}
    username: ${{ secrets.EC2_USER }}
    key: ${{ secrets.EC2_SSH_KEY }}
    script: |
      set -e
      # More detailed debugging
      pwd
      whoami
      
      # Ensure the repository exists
      if [ ! -d "/home/ec2-user/Starteryou-Website/Starteryou" ]; then
        echo "Repository not found. Cloning..."
        mkdir -p /home/ec2-user/Starteryou-Website
        cd /home/ec2-user/Starteryou-Website
        git clone https://github.com/starteryouInc/Starteryou-Website.git -b develop Starteryou
      else
        echo "Repository found. Pulling latest changes..."
        cd /home/ec2-user/Starteryou-Website/Starteryou
        git pull origin develop --ff-only || git pull origin develop --rebase
      fi
      
      # Verify the directory contents and permissions
      echo "Verifying directory contents and permissions..."
      ls -al /home/ec2-user/Starteryou-Website/Starteryou
      
      # Create .env file with explicit permissions and verbose output
      echo "Creating .env file securely..."
      env_file="/home/ec2-user/Starteryou-Website/Starteryou/.env"
      
      # Remove existing .env file if it exists
      rm -f "$env_file"
      
      # Create .env with explicit permissions
      touch "$env_file"
      chmod 600 "$env_file"
      
      # Write environment variables
      printf "%s\n" \
      "NODE_ENV=production" \
      "MONGO_USER=${{ secrets.MONGO_USER }}" \
      "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" \
      "MONGO_HOST=${{ secrets.MONGO_HOST }}" \
      "MONGO_PORT=${{ secrets.MONGO_PORT }}" \
      "MONGO_DB=${{ secrets.MONGO_DB }}" \
      "MONGO_TLS_CA=${{ secrets.MONGO_TLS_CA }}" \
      "MONGO_TLS_CERT=${{ secrets.MONGO_TLS_CERT }}" \
      > "$env_file"
      
      # Verify .env file creation
      echo "Checking .env file..."
      ls -l "$env_file"
      cat "$env_file" || echo "Failed to read .env file"
      
      # Rest of your existing script remains the same
