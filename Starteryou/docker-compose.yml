name: Deploy to AWS EC2

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS credentials
        run: |
          echo "Setting up AWS credentials..."
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_REGION="${{ secrets.AWS_REGION }}"
          echo "Validating AWS credentials..."
          aws sts get-caller-identity --region $AWS_REGION

      # Step 3: Debug Environment Variables
      - name: Debug Secrets and Variables
        run: |
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:0:4}***"
          echo "AWS_REGION=$AWS_REGION"
          echo "DB_EC2_HOST=$DB_EC2_HOST"
          echo "DB_EC2_USER=$DB_EC2_USER"

      # Step 4: Verify SSH Tunnel to DB Server
      - name: Verify SSH Tunnel to DB Server
        run: |
          echo "Setting up SSH tunnel to DB server..."
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H "$DB_EC2_HOST" >> ~/.ssh/known_hosts
          echo "$DB_EC2_SSH_KEY" > ~/.ssh/db_key.pem
          chmod 600 ~/.ssh/db_key.pem
          ssh -i ~/.ssh/db_key.pem "$DB_EC2_USER@$DB_EC2_HOST" "echo 'DB Server SSH Verified!'"

      # Step 5: Deploy Application to Dev Server
      - name: Deploy Application to Dev Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Starting deployment on dev server..."
            PROJECT_ROOT="/home/ec2-user/Starteryou-Website"
            cd $PROJECT_ROOT || (echo "Project root does not exist, creating it..." && mkdir -p $PROJECT_ROOT && cd $PROJECT_ROOT)
            if [ ! -d "Starteryou" ]; then
              echo "Cloning repository..."
              git clone https://github.com/***Inc/Starteryou-Website.git -b develop Starteryou
            else
              echo "Updating repository..."
              cd Starteryou
              git fetch origin develop
              git reset --hard origin/develop
            fi
            echo "Restarting Docker..."
            sudo systemctl restart docker
            docker-compose down --volumes --remove-orphans
            docker-compose up -d --build
            echo "Deployment completed successfully!"
