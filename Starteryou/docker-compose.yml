version: "3.9"
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: starteryou-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: production
      PORT: 3000
      FRONTEND_URL: ${FRONTEND_URL}
      VITE_BACKEND_URL: ${VITE_BACKEND_URL}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_HOST: localhost # Access via SSH tunnel
      MONGO_PORT: 27017
      MONGO_DB: ${MONGO_DB}
      MONGO_AUTH_SOURCE: ${MONGO_AUTH_SOURCE}
      MONGO_TLS: true
      MONGO_TLS_CA: /etc/ssl/mongodb/ca.crt
      MONGO_TLS_CERT: /etc/ssl/mongodb/server.pem
      MONGO_APP_NAME: ${MONGO_APP_NAME}
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "3000:3000"
    networks:
      - starteryou-network
    depends_on:
      - tunnel
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  tunnel:
    image: alpine:latest
    container_name: ssh-tunnel
    command: >
      sh -c "apk add --no-cache openssh &&
             chmod 600 /keys/myKey.pem &&
             mkdir -p ~/.ssh &&
             ssh-keyscan ${DB_EC2_HOST} >> ~/.ssh/known_hosts &&
             ssh -N -L 27017:localhost:27017 -L /etc/ssl/mongodb:/etc/ssl/mongodb:ro \
             ${DB_EC2_USER}@${DB_EC2_HOST} -i /keys/myKey.pem"
    restart: always
    networks:
      - starteryou-network
    volumes:
      - ./keys:/keys:ro # Read-only mount for private SSH keys

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: starteryou-frontend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      BACKEND_URL: ${BACKEND_URL}
    depends_on:
      - backend
    networks:
      - starteryou-network

networks:
  starteryou-network:
    driver: bridge
